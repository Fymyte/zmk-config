/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    // tapping-term-ms = <150>;
};

/ {
    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "SKQ";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <1000>;
        };
        undo_page_up: undo_page_up {
            compatible = "zmk,behavior-mod-morph";
            label = "UNDO_PAGE_UP";
            bindings =
                <&kp LC(Z)>,
                <&kp PAGE_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
        delete_page_down: delete_page_down {
            compatible = "zmk,behavior-mod-morph";
            label = "DELETE_PAGE_DOWN";
            bindings =
                <&kp DELETE>,
                <&kp PAGE_DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
                &kp TAB  &kp Q  &kp W     &kp E  &kp R           &kp T        &kp Y  &kp U      &kp I    &kp O     &kp P   &kp BSPC
&mt LEFT_CONTROL ESCAPE  &kp A  &kp S     &kp D  &kp F           &kp G        &kp H  &kp J      &kp K    &kp L  &kp SEMI    &kp SQT
         &kp LEFT_SHIFT  &kp Z  &kp X     &kp C  &kp V           &kp B        &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                                       &kp LGUI  &mo 2  &kp LEFT_SHIFT    &kp SPACE  &mo 1   &kp RALT
            >;
        };

        numbers_and_symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
     &kp TILDE       &kp EXCL        &kp AT      &kp HASH      &kp DLLR         &kp PRCNT       &kp CARET      &kp AMPS      &kp STAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &kp DELETE
     &kp GRAVE   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0  &kp BACKSLASH
&kp UNDERSCORE  &kp LESS_THAN  &kp KP_MINUS   &kp KP_PLUS  &kp KP_EQUAL  &kp GREATER_THAN          &trans        &trans        &trans      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GRAVE
                                                 &kp LGUI        &trans            &trans          &trans        &trans      &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB  &kp N1  &kp LC(RIGHT_ARROW)             &kp N3           &kp N4              &kp N5    &kp LC(C)  &undo_page_up  &kp N8     &kp N9  &kp LC(V)  &tog 3
   &trans  &trans               &trans  &delete_page_down          &kp END              &trans     &kp LEFT       &kp DOWN  &kp UP  &kp RIGHT   &kp HOME  &trans
&kp LSHFT  &trans               &trans             &trans  &kt RIGHT_SHIFT  &kp LC(LEFT_ARROW)       &trans         &trans  &trans     &trans     &trans  &trans
                                                 &kp LGUI           &trans              &trans        &mo 4         &trans  &trans
            >;
        };

        gaming {
            bindings = <
         &kp TAB  &trans  &trans      &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &trans  &trans      &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
  &kp LEFT_SHIFT  &trans  &trans      &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                  &kp ESCAPE  &trans  &kp SPACE    &trans  &trans  &trans
            >;
        };

        functions {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1   &kp F2   &kp F3   &kp F4  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F5   &kp F6   &kp F7   &kp F8  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp F9  &kp F10  &kp F11  &kp F12  &trans
                        &trans  &trans  &trans    &trans  &trans   &trans
            >;
        };
    };
};

// vim:ft=dts
